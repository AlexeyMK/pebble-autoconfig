#ifndef autoconfig_h
#define autoconfig_h

#include <pebble.h>

{%- import 'autoconfig.jinja.utils' as autoconfig_utils -%}

{% for item in preferences['items']: %}

{%- if item['type'] == 'choice' %}
typedef enum {
{%- for choice in item['choices']: %}
	{{ autoconfig_utils.cname(item)|upper }}_{{ autoconfig_utils.coolstring(choice.keys()[0]) }},
{%- endfor %}
} {{ autoconfig_utils.cname(item)|capitalize }}Value;
{% endif %}
#define {{ autoconfig_utils.cname(item)|upper }}_PKEY {{ appKeys[item['name']] }}
{%- if item['type'] == 'choice' %}
{{ autoconfig_utils.cname(item)|capitalize }}Value get{{ autoconfig_utils.cname(item)|capitalize }}();
{%- elif item['type'] == 'switch' %}
bool get{{ autoconfig_utils.cname(item)|capitalize }}();
{%- elif item['type'] == 'string' %}
char* get{{ autoconfig_utils.cname(item)|capitalize }}();
{%- else %}
int32_t get{{ autoconfig_utils.cname(item)|capitalize }}();
{%- endif %}
{% endfor %}

void autoconf_in_received_handler(DictionaryIterator *iter, void *context); 

void autoconf_init();
void autoconf_deinit();

#endif